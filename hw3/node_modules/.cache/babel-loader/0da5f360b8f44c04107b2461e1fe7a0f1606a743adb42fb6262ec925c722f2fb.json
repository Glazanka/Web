{"ast":null,"code":"import axios from \"axios\";\nconst axiosInstance = axios.create({\n  baseURL: 'http://localhost:8081',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\naxiosInstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  console.log(\"üîê Token being sent:\", token); // üëà –ø—Ä–æ–≤–µ—Ä–∏ –≤ –∫–æ–Ω–∑–æ–ª–∞—Ç–∞\n  if (token && config.headers) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nexport default axiosInstance;","map":{"version":3,"names":["axios","axiosInstance","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","console","log","Authorization"],"sources":["C:/Users/Rado/Desktop/uni/web/Web-1/hw3/src/api/axiosConfig.ts"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: 'http://localhost:8081',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\naxiosInstance.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  console.log(\"üîê Token being sent:\", token); // üëà –ø—Ä–æ–≤–µ—Ä–∏ –≤ –∫–æ–Ω–∑–æ–ª–∞—Ç–∞\r\n  if (token && config.headers) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n\r\nexport default axiosInstance;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAM,CAAC;EACjCC,OAAO,EAAE,uBAAuB;EAChCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEFH,aAAa,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACjD,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3CC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEJ,KAAK,CAAC,CAAC,CAAC;EAC5C,IAAIA,KAAK,IAAID,MAAM,CAACJ,OAAO,EAAE;IAC3BI,MAAM,CAACJ,OAAO,CAACU,aAAa,GAAG,UAAUL,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAGF,eAAeP,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rado\\\\Desktop\\\\uni\\\\web\\\\Web-1\\\\hw3\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jwtDecode } from 'jwt-decode';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({\n  token: null,\n  user: null,\n  login: () => {},\n  logout: () => {}\n});\nconst login = async (username, password) => {\n  const res = await axios.post(\"/auth/login\", {\n    username,\n    password\n  });\n  const token = res.data.token;\n  setToken(token);\n  localStorage.setItem(\"token\", token);\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [user, setUser] = useState(() => {\n    const stored = localStorage.getItem('token');\n    return stored ? jwtDecode(stored) : null;\n  });\n  useEffect(() => {\n    if (token) {\n      setUser(jwtDecode(token));\n      localStorage.setItem('token', token);\n    } else {\n      setUser(null);\n      localStorage.removeItem('token');\n    }\n  }, [token]);\n  const login = newToken => {\n    setToken(newToken);\n  };\n  const logout = () => {\n    setToken(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token,\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"01WqUj7WoQyGRnjMczQdPin4w0o=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nfunction setToken(token) {\n  throw new Error('Function not implemented.');\n}\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jwtDecode","axios","jsxDEV","_jsxDEV","AuthContext","token","user","login","logout","username","password","res","post","data","setToken","localStorage","setItem","AuthProvider","children","_s","getItem","setUser","stored","removeItem","newToken","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","Error","$RefreshReg$"],"sources":["C:/Users/Rado/Desktop/uni/web/Web-1/hw3/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport axios from 'axios';\r\n\r\ninterface DecodedToken {\r\n  username: string;\r\n  avatar?: string;\r\n  exp: number;\r\n}\r\n\r\ninterface AuthContextType {\r\n  token: string | null;\r\n  user: DecodedToken | null;\r\n  login: (token: string) => void;\r\n  logout: () => void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType>({\r\n  token: null,\r\n  user: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n\r\nconst login = async (username: string, password: string) => {\r\n  const res = await axios.post(\"/auth/login\", { username, password });\r\n  const token = res.data.token;\r\n  setToken(token);\r\n  localStorage.setItem(\"token\", token);\r\n};\r\n\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [token, setToken] = useState<string | null>(localStorage.getItem('token'));\r\n  const [user, setUser] = useState<DecodedToken | null>(() => {\r\n    const stored = localStorage.getItem('token');\r\n    return stored ? jwtDecode<DecodedToken>(stored) : null;\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      setUser(jwtDecode<DecodedToken>(token));\r\n      localStorage.setItem('token', token);\r\n    } else {\r\n      setUser(null);\r\n      localStorage.removeItem('token');\r\n    }\r\n  }, [token]);\r\n\r\n  const login = (newToken: string) => {\r\n    setToken(newToken);\r\n  };\r\n\r\n  const logout = () => {\r\n    setToken(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ token, user, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\nfunction setToken(token: any) {\r\n  throw new Error('Function not implemented.');\r\n}\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,SAAS,QAAQ,YAAY;AACtC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAe1B,MAAMC,WAAW,gBAAGR,aAAa,CAAkB;EACjDS,KAAK,EAAE,IAAI;EACXC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAEA,CAAA,KAAM,CAAC,CAAC;EACfC,MAAM,EAAEA,CAAA,KAAM,CAAC;AACjB,CAAC,CAAC;AAEF,MAAMD,KAAK,GAAG,MAAAA,CAAOE,QAAgB,EAAEC,QAAgB,KAAK;EAC1D,MAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAC,aAAa,EAAE;IAAEH,QAAQ;IAAEC;EAAS,CAAC,CAAC;EACnE,MAAML,KAAK,GAAGM,GAAG,CAACE,IAAI,CAACR,KAAK;EAC5BS,QAAQ,CAACT,KAAK,CAAC;EACfU,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEX,KAAK,CAAC;AACtC,CAAC;AAGD,OAAO,MAAMY,YAAqD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrF,MAAM,CAACd,KAAK,EAAES,QAAQ,CAAC,GAAGhB,QAAQ,CAAgBiB,YAAY,CAACK,OAAO,CAAC,OAAO,CAAC,CAAC;EAChF,MAAM,CAACd,IAAI,EAAEe,OAAO,CAAC,GAAGvB,QAAQ,CAAsB,MAAM;IAC1D,MAAMwB,MAAM,GAAGP,YAAY,CAACK,OAAO,CAAC,OAAO,CAAC;IAC5C,OAAOE,MAAM,GAAGtB,SAAS,CAAesB,MAAM,CAAC,GAAG,IAAI;EACxD,CAAC,CAAC;EAEFvB,SAAS,CAAC,MAAM;IACd,IAAIM,KAAK,EAAE;MACTgB,OAAO,CAACrB,SAAS,CAAeK,KAAK,CAAC,CAAC;MACvCU,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEX,KAAK,CAAC;IACtC,CAAC,MAAM;MACLgB,OAAO,CAAC,IAAI,CAAC;MACbN,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;IAClC;EACF,CAAC,EAAE,CAAClB,KAAK,CAAC,CAAC;EAEX,MAAME,KAAK,GAAIiB,QAAgB,IAAK;IAClCV,QAAQ,CAACU,QAAQ,CAAC;EACpB,CAAC;EAED,MAAMhB,MAAM,GAAGA,CAAA,KAAM;IACnBM,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC;EAED,oBACEX,OAAA,CAACC,WAAW,CAACqB,QAAQ;IAACC,KAAK,EAAE;MAAErB,KAAK;MAAEC,IAAI;MAAEC,KAAK;MAAEC;IAAO,CAAE;IAAAU,QAAA,EACzDA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACX,EAAA,CA9BWF,YAAqD;AAAAc,EAAA,GAArDd,YAAqD;AAgClE,OAAO,MAAMe,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMpC,UAAU,CAACO,WAAW,CAAC;AAAA;AAAC6B,GAAA,CAAxCD,OAAO;AACpB,SAASlB,QAAQA,CAACT,KAAU,EAAE;EAC5B,MAAM,IAAI6B,KAAK,CAAC,2BAA2B,CAAC;AAC9C;AAAC,IAAAH,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}